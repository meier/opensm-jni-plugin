# Use this file to configure the OpenSM Java Native Interface Plugin
#
# JAVA FEATURES
#
# The absolute path of the native library (java virtual machine)
# (this plugin loads a java virtual machine, which in turn loads the main java class)
#JVM_LIBRARY_PATH /usr/lib64/libjvm.so
JVM_LIBRARY_PATH /etc/alternatives/jre/lib/amd64/server/libjvm.so

#
# The path to ALL the necessary JAR files for the Server (client need additional jars)
JVM_CLASS_PATH -Djava.class.path=/usr/share/java/OsmClientServer/OsmClientServer.jar:/usr/share/java/JLdapOtpInterface/JLdapOtpInterface.jar:/usr/share/java/OsmClientServer/lib/LcSecureClientServer.jar:/usr/share/java/JLdapOtpInterface/lib/LcCommon.jar
#
# Java command line arguments (native library path, property files, etc. MAX # props is 7)
JVM_SYS_PROPS -Djava.library.path=/usr/lib64/ -DNetworkProperties.file=/etc/opensm-plugin/OsmJServer.properties -DKeyStoreProperties.file=/etc/opensm-plugin/OsmJServer.properties -DAuthenticationProperties.file=/etc/opensm-plugin/OsmJServer.properties -DAuthorizationProperties.file=/etc/opensm-plugin/OsmJServer.properties -DOmsProperties.file=/etc/opensm-plugin/OsmJServer.properties
#
# Java Log settings
JVM_LOGCONFIG_FILE -Djava.util.logging.config.file=/etc/opensm-plugin/OsmJServer.properties
#
# The class (within a JAR in the classpath) who's "main()" will be invoked to start things running
JAVA_MAIN_CLASS gov/llnl/lc/infiniband/opensm/plugin/OsmPluginMain
#

# MONITOR and CONTROL FEATURES
#  (time periods are in seconds)
#
# These periods dictate how fast certain tasks run within the plugin.  The update period controls the "opensm sample rate"
# or how often opensm data is refreshed.  This number should be relatively small.  The report period controls the
# "static refresh rate" or how often parameters that are deemed to seldom change are sampled.  This value can be large
# since the data it gathers is deemed to be mostly static (i.e. version number).
UPDATE_PERIOD 5
REPORT_PERIOD 900
#

# EVENT FEATURES
#
# The opensm event plugin was originally designed specifically for reporting opensm state changes and perf manager
# counter changes.  Currently, the perf manager "reports an event" every time one of its "monitored" port counters
# change values.  On large clusters, and on clusters with io problems, the perf manager can produce many, many,
# "report events".  This is often an overwhelming amount of information, much of which is redundant.
# An event filter can be employed to mitigate the noise.  By default, the perf manager is ignored.
# (pick only one of the following values, if nothing is selected, IGNORE_PORTS is the default)
#
# IGNORE_NONE              - allow all
# IGNORE_ALL               - turn reporting off
# IGNORE_PORT_COUNTERS     - filter out data counter events
# IGNORE_PORT_ERRORS       - filter out error counter events
# IGNORE_PORTS             - filter out all counter events from the perf manager (default)
EVENT_FILTER IGNORE_PORTS


# DEBUG FEATURES
#
# The log flags used (verbosity level - OR of levels in osm_log.h)
LOG_FLAGS 0x03

# Force flush of the log file after each log message
FORCE_LOG_FLUSH TRUE

# Log file to be used (native C Log)
LOG_FILE /var/log/osmJniPi.log

# Limit the size of the log file in MB. If overrun, log is restarted
LOG_MAX_SIZE 0

# If TRUE will accumulate the log over multiple OpenSM sessions
ACCUM_LOG_FILE TRUE


